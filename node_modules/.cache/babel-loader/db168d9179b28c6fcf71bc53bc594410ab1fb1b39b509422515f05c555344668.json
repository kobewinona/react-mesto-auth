{"ast":null,"code":"var _jsxFileName = \"/Users/dmitriklimkin/dev/mesto-react/src/components/PopupWithForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PopupWithForm(props) {\n  _s();\n  const [validation, setValidation] = useState({});\n  const handleInputChange = event => {\n    const {\n      name,\n      value,\n      validity\n    } = event.target;\n    const message = validity.valid ? '' : event.target.validationMessage;\n    setValidation(prevValidation => ({\n      ...prevValidation,\n      [name]: message\n    }));\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // Perform any additional validation or form submission logic here\n\n    // Check if all inputs are valid\n    const isValid = Object.values(validation).every(message => message === '');\n    if (isValid) {\n      event.target.submit();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: `popup popup_base_light ${props.isOpen && 'popup_opened'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `popup__container popup__container_type_form ${props.isOpen ? 'grow' : 'shrink'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"popup__close-button\",\n        type: \"button\",\n        \"aria-label\": \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n        onClick: props.onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"popup__title\",\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        name: props.name,\n        onSubmit: handleSubmit,\n        noValidate: true,\n        children: [React.Children.map(props.children, child => /*#__PURE__*/React.cloneElement(child, {\n          onChange: handleInputChange,\n          validationMessage: validation[child.props.name] || ''\n        })), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"form__submit\",\n          type: \"submit\",\n          children: props.submitText || 'Сохранить'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(PopupWithForm, \"IMWE1OdOmdaphDte239WdKNIcI8=\");\n_c = PopupWithForm;\nexport default PopupWithForm;\nvar _c;\n$RefreshReg$(_c, \"PopupWithForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PopupWithForm","props","_s","validation","setValidation","handleInputChange","event","name","value","validity","target","message","valid","validationMessage","prevValidation","handleSubmit","preventDefault","isValid","Object","values","every","submit","className","isOpen","children","type","onClick","onClose","fileName","_jsxFileName","lineNumber","columnNumber","title","onSubmit","noValidate","Children","map","child","cloneElement","onChange","submitText","_c","$RefreshReg$"],"sources":["/Users/dmitriklimkin/dev/mesto-react/src/components/PopupWithForm.jsx"],"sourcesContent":["import React, {useState} from 'react';\n\nfunction PopupWithForm(props) {\n  const [validation, setValidation] = useState({});\n  \n  const handleInputChange = (event) => {\n    const { name, value, validity } = event.target;\n    const message = validity.valid ? '' : event.target.validationMessage;\n    \n    setValidation((prevValidation) => ({\n      ...prevValidation,\n      [name]: message,\n    }));\n  };\n  \n  const handleSubmit = (event) => {\n    event.preventDefault();\n    \n    // Perform any additional validation or form submission logic here\n    \n    // Check if all inputs are valid\n    const isValid = Object.values(validation).every((message) => message === '');\n    if (isValid) {\n      event.target.submit();\n    }\n  };\n  \n  return (\n    <section className={`popup popup_base_light ${props.isOpen && 'popup_opened'}`}>\n      <div className={`popup__container popup__container_type_form ${props.isOpen ? 'grow' : 'shrink'}`}>\n        <button className=\"popup__close-button\" type=\"button\" aria-label=\"Закрыть\" onClick={props.onClose} />\n        <h2 className=\"popup__title\">{props.title}</h2>\n        <form className=\"form\" name={props.name} onSubmit={handleSubmit} noValidate>\n          {React.Children.map(props.children, (child) =>\n            React.cloneElement(child, {\n              onChange: handleInputChange,\n              validationMessage: validation[child.props.name] || '',\n            })\n          )}\n          <button className=\"form__submit\" type=\"submit\">\n            {props.submitText || 'Сохранить'}\n          </button>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nexport default PopupWithForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}