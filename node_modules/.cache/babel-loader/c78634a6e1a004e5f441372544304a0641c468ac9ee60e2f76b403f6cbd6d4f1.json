{"ast":null,"code":"var _jsxFileName = \"/Users/dmitriklimkin/dev/mesto-react/src/components/FormValidator.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FormValidator(props) {\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (event.target.checkValidity()) {\n      props.onSubmit(event, event.target.checkValidity());\n    }\n  }\n  function validateInputs() {\n    if (props.isOpen) {\n      const inputsList = Object.values(props.inputRefs.current);\n      inputsList.forEach(input => {\n        if (!input.validity.valid) {\n          input.classList.add('form__input_error');\n          props.onError(input.name, input.validationMessage);\n        } else {\n          input.classList.remove('form__input_error');\n        }\n      });\n    }\n  }\n  validateInputs();\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    name: props.name,\n    onSubmit: handleSubmit,\n    noValidate: true,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c = FormValidator;\nexport default FormValidator;\nvar _c;\n$RefreshReg$(_c, \"FormValidator\");","map":{"version":3,"names":["FormValidator","props","handleSubmit","event","preventDefault","target","checkValidity","onSubmit","validateInputs","isOpen","inputsList","Object","values","inputRefs","current","forEach","input","validity","valid","classList","add","onError","name","validationMessage","remove","_jsxDEV","className","noValidate","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dmitriklimkin/dev/mesto-react/src/components/FormValidator.jsx"],"sourcesContent":["function FormValidator(props) {\n  function handleSubmit(event) {\n    event.preventDefault();\n    \n    if (event.target.checkValidity()) {\n      props.onSubmit(event, event.target.checkValidity());\n    }\n  }\n  \n  function validateInputs() {\n    if (props.isOpen) {\n      const inputsList = Object.values(props.inputRefs.current);\n    \n      inputsList.forEach(input => {\n        if (!input.validity.valid) {\n          input.classList.add('form__input_error');\n          props.onError(input.name, input.validationMessage);\n        } else {\n          input.classList.remove('form__input_error');\n        }\n      })\n    }\n  }\n  \n  validateInputs();\n  \n  return (\n    <form className=\"form\" name={props.name} onSubmit={handleSubmit} noValidate>\n      {props.children}\n    </form>\n  );\n}\n\nexport default FormValidator;"],"mappings":";;AAAA,SAASA,aAAaA,CAACC,KAAK,EAAE;EAC5B,SAASC,YAAYA,CAACC,KAAK,EAAE;IAC3BA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAID,KAAK,CAACE,MAAM,CAACC,aAAa,CAAC,CAAC,EAAE;MAChCL,KAAK,CAACM,QAAQ,CAACJ,KAAK,EAAEA,KAAK,CAACE,MAAM,CAACC,aAAa,CAAC,CAAC,CAAC;IACrD;EACF;EAEA,SAASE,cAAcA,CAAA,EAAG;IACxB,IAAIP,KAAK,CAACQ,MAAM,EAAE;MAChB,MAAMC,UAAU,GAAGC,MAAM,CAACC,MAAM,CAACX,KAAK,CAACY,SAAS,CAACC,OAAO,CAAC;MAEzDJ,UAAU,CAACK,OAAO,CAACC,KAAK,IAAI;QAC1B,IAAI,CAACA,KAAK,CAACC,QAAQ,CAACC,KAAK,EAAE;UACzBF,KAAK,CAACG,SAAS,CAACC,GAAG,CAAC,mBAAmB,CAAC;UACxCnB,KAAK,CAACoB,OAAO,CAACL,KAAK,CAACM,IAAI,EAAEN,KAAK,CAACO,iBAAiB,CAAC;QACpD,CAAC,MAAM;UACLP,KAAK,CAACG,SAAS,CAACK,MAAM,CAAC,mBAAmB,CAAC;QAC7C;MACF,CAAC,CAAC;IACJ;EACF;EAEAhB,cAAc,CAAC,CAAC;EAEhB,oBACEiB,OAAA;IAAMC,SAAS,EAAC,MAAM;IAACJ,IAAI,EAAErB,KAAK,CAACqB,IAAK;IAACf,QAAQ,EAAEL,YAAa;IAACyB,UAAU;IAAAC,QAAA,EACxE3B,KAAK,CAAC2B;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEX;AAACC,EAAA,GA/BQjC,aAAa;AAiCtB,eAAeA,aAAa;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}