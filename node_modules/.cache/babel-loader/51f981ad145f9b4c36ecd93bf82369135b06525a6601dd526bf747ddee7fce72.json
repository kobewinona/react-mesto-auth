{"ast":null,"code":"var _jsxFileName = \"/Users/dmitriklimkin/dev/mesto-react/src/components/EditProfilePopup.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport FormWithValidation from './FormWithValidation';\nimport InputWithValidation from './InputWithValidation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditProfilePopup(props) {\n  _s();\n  const currentUser = useContext(CurrentUserContext);\n  const [inputsValidity, setInputsValidity] = useState(false);\n  const [inputValues, setInputValues] = useState({\n    name: '',\n    about: ''\n  });\n\n  // handle change\n\n  function handleValuesUpdate(name, value) {\n    setInputValues(prevValues => ({\n      ...prevValues,\n      [name]: value\n    }));\n  }\n  function handleValidityUpdate(name, value) {\n    setInputsValidity(prevValues => ({\n      ...prevValues,\n      [name]: value\n    }));\n  }\n\n  // handle submit\n\n  function handleSubmit() {\n    props.onUpdateUser({\n      name: inputValues.name,\n      about: inputValues.about\n    });\n  }\n\n  // effects\n\n  useEffect(() => {\n    setInputValues({\n      ...inputValues,\n      name: currentUser.name,\n      about: currentUser.about\n    });\n  }, [currentUser]);\n  return /*#__PURE__*/_jsxDEV(FormWithValidation, {\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    inputName: \"edit-profile\",\n    submitText: props.isLoading ? props.loadingText : 'Сохранить',\n    onSubmit: handleSubmit,\n    ariaLabel: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C.\",\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(InputWithValidation, {\n      className: \"form__input\",\n      \"aria-label\": \"\\u0418\\u043C\\u044F.\",\n      isShown: props.isOpen,\n      onUpdate: handleValuesUpdate,\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"\\u0418\\u043C\\u044F\",\n      minLength: \"2\",\n      maxLength: \"40\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputWithValidation, {\n      className: \"form__input\",\n      \"aria-label\": \"\\u0414\\u0435\\u044F\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C.\",\n      isShown: props.isOpen,\n      onUpdate: handleValuesUpdate,\n      type: \"text\",\n      name: \"about\",\n      placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n      minLength: \"2\",\n      maxLength: \"200\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(EditProfilePopup, \"tnSlNlqU4DJfVmz3qAOaK+OSFaA=\");\n_c = EditProfilePopup;\nexport default EditProfilePopup;\nvar _c;\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"names":["useState","useEffect","useContext","CurrentUserContext","FormWithValidation","InputWithValidation","jsxDEV","_jsxDEV","EditProfilePopup","props","_s","currentUser","inputsValidity","setInputsValidity","inputValues","setInputValues","name","about","handleValuesUpdate","value","prevValues","handleValidityUpdate","handleSubmit","onUpdateUser","title","inputName","submitText","isLoading","loadingText","onSubmit","ariaLabel","children","className","isShown","isOpen","onUpdate","type","placeholder","minLength","maxLength","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dmitriklimkin/dev/mesto-react/src/components/EditProfilePopup.jsx"],"sourcesContent":["import {useState, useEffect, useContext} from 'react';\n\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\n\nimport FormWithValidation from './FormWithValidation';\nimport InputWithValidation from './InputWithValidation';\n\n\nfunction EditProfilePopup(props) {\n  const currentUser = useContext(CurrentUserContext);\n  \n  const [inputsValidity, setInputsValidity] = useState(false);\n  const [inputValues, setInputValues] = useState({name: '', about: ''});\n  \n  \n  // handle change\n  \n  function handleValuesUpdate(name, value) {\n    setInputValues((prevValues) => ({\n      ...prevValues, [name]: value\n    }));\n  }\n  \n  function handleValidityUpdate(name, value) {\n    setInputsValidity((prevValues) => ({\n      ...prevValues, [name]: value\n    }));\n  }\n  \n  \n  // handle submit\n  \n  function handleSubmit() {\n    props.onUpdateUser({\n      name: inputValues.name,\n      about: inputValues.about\n    });\n  }\n  \n  \n  // effects\n  \n  useEffect(() => {\n    setInputValues({...inputValues,\n      name: currentUser.name,\n      about: currentUser.about\n    })\n  }, [currentUser]);\n  \n  \n  return (\n    <FormWithValidation\n      title=\"Редактировать профиль\"\n      inputName=\"edit-profile\"\n      submitText={props.isLoading ? props.loadingText : 'Сохранить'}\n      onSubmit={handleSubmit}\n      ariaLabel=\"Сохранить.\"\n      {...props}\n    >\n      <InputWithValidation\n        className=\"form__input\"\n        aria-label=\"Имя.\"\n        isShown={props.isOpen}\n        onUpdate={handleValuesUpdate}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Имя\"\n        minLength=\"2\"\n        maxLength=\"40\"\n        required\n      />\n      <InputWithValidation\n        className=\"form__input\"\n        aria-label=\"Деятельность.\"\n        isShown={props.isOpen}\n        onUpdate={handleValuesUpdate}\n        type=\"text\"\n        name=\"about\"\n        placeholder=\"Описание\"\n        minLength=\"2\"\n        maxLength=\"200\"\n        required\n      />\n    </FormWithValidation>\n  );\n}\n\nexport default EditProfilePopup;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}