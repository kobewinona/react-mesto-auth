{"ast":null,"code":"var _jsxFileName = \"/Users/dmitriklimkin/dev/mesto-react/src/components/FormValidator.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FormValidator(props) {\n  _s();\n  const [isFormValid, setIsFormValid] = useState(false);\n  function validateForm(event) {\n    event.preventDefault();\n    console.log(event.target);\n    console.log(event.target.checkValidity());\n    if (event.target.checkValidity()) {\n      setIsFormValid(true);\n    } else {\n      setIsFormValid(false);\n    }\n    props.onSubmit(isFormValid);\n    resetValidation();\n  }\n  function resetValidation() {\n    setIsFormValid(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    name: props.name,\n    onSubmit: validateForm,\n    noValidate: true,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(FormValidator, \"M4OBgRSXD94ZVi5MuqihparQlfs=\");\n_c = FormValidator;\nexport default FormValidator;\nvar _c;\n$RefreshReg$(_c, \"FormValidator\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","FormValidator","props","_s","isFormValid","setIsFormValid","validateForm","event","preventDefault","console","log","target","checkValidity","onSubmit","resetValidation","className","name","noValidate","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dmitriklimkin/dev/mesto-react/src/components/FormValidator.jsx"],"sourcesContent":["import {useState} from 'react';\n\nfunction FormValidator(props) {\n  const [isFormValid, setIsFormValid] = useState(false);\n  \n  function validateForm(event) {\n    event.preventDefault();\n  \n    console.log(event.target);\n    console.log(event.target.checkValidity());\n    \n    if (event.target.checkValidity()) {\n      setIsFormValid(true);\n    } else {\n      setIsFormValid(false);\n    }\n    \n    props.onSubmit(isFormValid);\n    \n    resetValidation();\n  }\n  \n  function resetValidation() {\n    setIsFormValid(false);\n  }\n  \n  return (\n    <form className=\"form\" name={props.name} onSubmit={validateForm} noValidate>\n      {props.children}\n    </form>\n  );\n}\n\nexport default FormValidator;"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,aAAaA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC5B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAErD,SAASQ,YAAYA,CAACC,KAAK,EAAE;IAC3BA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtBC,OAAO,CAACC,GAAG,CAACH,KAAK,CAACI,MAAM,CAAC;IACzBF,OAAO,CAACC,GAAG,CAACH,KAAK,CAACI,MAAM,CAACC,aAAa,CAAC,CAAC,CAAC;IAEzC,IAAIL,KAAK,CAACI,MAAM,CAACC,aAAa,CAAC,CAAC,EAAE;MAChCP,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,MAAM;MACLA,cAAc,CAAC,KAAK,CAAC;IACvB;IAEAH,KAAK,CAACW,QAAQ,CAACT,WAAW,CAAC;IAE3BU,eAAe,CAAC,CAAC;EACnB;EAEA,SAASA,eAAeA,CAAA,EAAG;IACzBT,cAAc,CAAC,KAAK,CAAC;EACvB;EAEA,oBACEL,OAAA;IAAMe,SAAS,EAAC,MAAM;IAACC,IAAI,EAAEd,KAAK,CAACc,IAAK;IAACH,QAAQ,EAAEP,YAAa;IAACW,UAAU;IAAAC,QAAA,EACxEhB,KAAK,CAACgB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEX;AAACnB,EAAA,CA7BQF,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AA+BtB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}