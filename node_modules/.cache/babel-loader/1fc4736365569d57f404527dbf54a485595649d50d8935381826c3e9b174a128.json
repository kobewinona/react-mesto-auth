{"ast":null,"code":"var _jsxFileName = \"/Users/dmitriklimkin/dev/mesto-react/src/components/FormWithValidation.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useMemo } from 'react';\nimport Spinner from './Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FormWithValidation(props) {\n  _s();\n  const [isFormValid, setIsFormValid] = useState(false);\n  const [inputsValidity, setInputsValidity] = useState({});\n  console.log('inputsValidity', inputsValidity);\n\n  // function handleChange(event) {\n  //   const inputs = Array.from(event.currentTarget.elements);\n  //\n  //   const currentInputsValidity = inputs.reduce((validity, input) => {\n  //     validity[input.name] = input.validity.valid;\n  //     return validity;\n  //   }, {});\n  //\n  //   setInputsValidity(currentInputsValidity);\n  // }\n\n  const handleChange = useMemo(event => {\n    const inputs = Array.from(event.currentTarget.elements);\n    const currentInputsValidity = inputs.reduce((validity, input) => {\n      validity[input.name] = input.validity.valid;\n      return validity;\n    }, {});\n    setInputsValidity(currentInputsValidity);\n  }, [inputsValidity]);\n  function validateForm() {\n    const inputValues = Object.values(inputsValidity);\n    if (inputValues.length === 0) {\n      setIsFormValid(false);\n      return;\n    }\n    setIsFormValid(inputValues.every(i => i === true));\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (event.target.checkValidity()) {\n      props.onSubmit();\n    }\n    setIsFormValid(false);\n  }\n  useEffect(() => {\n    validateForm();\n\n    // eslint-disable-next-line\n  }, [inputsValidity]);\n  useEffect(() => {\n    setInputsValidity({});\n  }, [props.isOpen]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    name: props.name,\n    onChange: handleChange,\n    onSubmit: handleSubmit,\n    noValidate: true,\n    children: [props.children, props.isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `form__submit ${!isFormValid && 'form__submit_disabled'}`,\n      type: \"submit\",\n      name: \"submit\",\n      disabled: !isFormValid,\n      children: props.submitText || 'Сохранить'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(FormWithValidation, \"GPCjCg8CyZdUAdUDbYG5VJYobrs=\");\n_c = FormWithValidation;\nexport default FormWithValidation;\nvar _c;\n$RefreshReg$(_c, \"FormWithValidation\");","map":{"version":3,"names":["useState","useEffect","useMemo","Spinner","jsxDEV","_jsxDEV","FormWithValidation","props","_s","isFormValid","setIsFormValid","inputsValidity","setInputsValidity","console","log","handleChange","event","inputs","Array","from","currentTarget","elements","currentInputsValidity","reduce","validity","input","name","valid","validateForm","inputValues","Object","values","length","every","i","handleSubmit","preventDefault","target","checkValidity","onSubmit","isOpen","className","onChange","noValidate","children","isLoading","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","submitText","_c","$RefreshReg$"],"sources":["/Users/dmitriklimkin/dev/mesto-react/src/components/FormWithValidation.jsx"],"sourcesContent":["import {useState, useEffect, useMemo} from 'react';\n\nimport Spinner from './Spinner';\n\n\nfunction FormWithValidation(props) {\n  const [isFormValid, setIsFormValid] = useState(false);\n  const [inputsValidity, setInputsValidity] = useState({});\n  \n  console.log('inputsValidity', inputsValidity);\n  \n  // function handleChange(event) {\n  //   const inputs = Array.from(event.currentTarget.elements);\n  //\n  //   const currentInputsValidity = inputs.reduce((validity, input) => {\n  //     validity[input.name] = input.validity.valid;\n  //     return validity;\n  //   }, {});\n  //\n  //   setInputsValidity(currentInputsValidity);\n  // }\n  \n  const handleChange = useMemo((event) => {\n    const inputs = Array.from(event.currentTarget.elements);\n  \n    const currentInputsValidity = inputs.reduce((validity, input) => {\n      validity[input.name] = input.validity.valid;\n      return validity;\n    }, {});\n  \n    setInputsValidity(currentInputsValidity);\n    \n  }, [inputsValidity])\n  \n  function validateForm() {\n    const inputValues = Object.values(inputsValidity);\n\n    if (inputValues.length === 0) {\n      setIsFormValid(false);\n      return;\n    }\n\n    setIsFormValid(inputValues.every((i) => i === true));\n  }\n  \n  function handleSubmit(event) {\n    event.preventDefault();\n    \n    if (event.target.checkValidity()) {\n      props.onSubmit();\n    }\n    \n    setIsFormValid(false);\n  }\n\n  useEffect(() => {\n    validateForm();\n  \n    // eslint-disable-next-line\n  }, [inputsValidity])\n  \n  useEffect(() => {\n    setInputsValidity({});\n  }, [props.isOpen])\n  \n  return (\n    <form\n      className=\"form\"\n      name={props.name}\n      onChange={handleChange}\n      onSubmit={handleSubmit}\n      noValidate\n    >\n      {props.children}\n      {props.isLoading\n        ? <Spinner />\n        : <button\n          className={`form__submit ${!isFormValid && 'form__submit_disabled'}`}\n          type=\"submit\"\n          name=\"submit\"\n          disabled={!isFormValid}\n        >{props.submitText || 'Сохранить'}</button>}\n    </form>\n  )\n}\n\nexport default FormWithValidation;"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAO,OAAO;AAElD,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhC,SAASC,kBAAkBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExDa,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,cAAc,CAAC;;EAE7C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMI,YAAY,GAAGb,OAAO,CAAEc,KAAK,IAAK;IACtC,MAAMC,MAAM,GAAGC,KAAK,CAACC,IAAI,CAACH,KAAK,CAACI,aAAa,CAACC,QAAQ,CAAC;IAEvD,MAAMC,qBAAqB,GAAGL,MAAM,CAACM,MAAM,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;MAC/DD,QAAQ,CAACC,KAAK,CAACC,IAAI,CAAC,GAAGD,KAAK,CAACD,QAAQ,CAACG,KAAK;MAC3C,OAAOH,QAAQ;IACjB,CAAC,EAAE,CAAC,CAAC,CAAC;IAENZ,iBAAiB,CAACU,qBAAqB,CAAC;EAE1C,CAAC,EAAE,CAACX,cAAc,CAAC,CAAC;EAEpB,SAASiB,YAAYA,CAAA,EAAG;IACtB,MAAMC,WAAW,GAAGC,MAAM,CAACC,MAAM,CAACpB,cAAc,CAAC;IAEjD,IAAIkB,WAAW,CAACG,MAAM,KAAK,CAAC,EAAE;MAC5BtB,cAAc,CAAC,KAAK,CAAC;MACrB;IACF;IAEAA,cAAc,CAACmB,WAAW,CAACI,KAAK,CAAEC,CAAC,IAAKA,CAAC,KAAK,IAAI,CAAC,CAAC;EACtD;EAEA,SAASC,YAAYA,CAACnB,KAAK,EAAE;IAC3BA,KAAK,CAACoB,cAAc,CAAC,CAAC;IAEtB,IAAIpB,KAAK,CAACqB,MAAM,CAACC,aAAa,CAAC,CAAC,EAAE;MAChC/B,KAAK,CAACgC,QAAQ,CAAC,CAAC;IAClB;IAEA7B,cAAc,CAAC,KAAK,CAAC;EACvB;EAEAT,SAAS,CAAC,MAAM;IACd2B,YAAY,CAAC,CAAC;;IAEd;EACF,CAAC,EAAE,CAACjB,cAAc,CAAC,CAAC;EAEpBV,SAAS,CAAC,MAAM;IACdW,iBAAiB,CAAC,CAAC,CAAC,CAAC;EACvB,CAAC,EAAE,CAACL,KAAK,CAACiC,MAAM,CAAC,CAAC;EAElB,oBACEnC,OAAA;IACEoC,SAAS,EAAC,MAAM;IAChBf,IAAI,EAAEnB,KAAK,CAACmB,IAAK;IACjBgB,QAAQ,EAAE3B,YAAa;IACvBwB,QAAQ,EAAEJ,YAAa;IACvBQ,UAAU;IAAAC,QAAA,GAETrC,KAAK,CAACqC,QAAQ,EACdrC,KAAK,CAACsC,SAAS,gBACZxC,OAAA,CAACF,OAAO;MAAA2C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBACX5C,OAAA;MACAoC,SAAS,EAAG,gBAAe,CAAChC,WAAW,IAAI,uBAAwB,EAAE;MACrEyC,IAAI,EAAC,QAAQ;MACbxB,IAAI,EAAC,QAAQ;MACbyB,QAAQ,EAAE,CAAC1C,WAAY;MAAAmC,QAAA,EACvBrC,KAAK,CAAC6C,UAAU,IAAI;IAAW;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEX;AAACzC,EAAA,CA/EQF,kBAAkB;AAAA+C,EAAA,GAAlB/C,kBAAkB;AAiF3B,eAAeA,kBAAkB;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}